ALTER SESSION SET CURRENT_SCHEMA = DEN_AUGUSTO;

CREATE TABLE person (
  per_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  per_name VARCHAR2(100) NOT NULL,
  per_whatsapp VARCHAR2(20),
  per_email VARCHAR2(100),
  per_password VARCHAR2(255),
  per_role VARCHAR2(20),
  per_created_at TIMESTAMP DEFAULT SYSTIMESTAMP
);
CREATE UNIQUE INDEX ux_per_email ON person(per_email);

CREATE TABLE region (
  reg_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  reg_name VARCHAR2(100) NOT NULL,
  reg_center_latitude NUMBER(9,6),
  reg_center_longitude NUMBER(9,6),
  reg_radius_km NUMBER(5,2),
  reg_created_at TIMESTAMP DEFAULT SYSTIMESTAMP,
  reg_updated_at TIMESTAMP
);

INSERT INTO region (reg_name, reg_center_latitude, reg_center_longitude, reg_radius_km, reg_created_at) VALUES 
('Centro', -23.223701, -45.901230, 3.5, SYSTIMESTAMP);

INSERT INTO region (reg_name, reg_center_latitude, reg_center_longitude, reg_radius_km, reg_created_at) VALUES 
('Zona Norte', -23.175000, -45.880000, 8.0, SYSTIMESTAMP);

INSERT INTO region (reg_name, reg_center_latitude, reg_center_longitude, reg_radius_km, reg_created_at) VALUES 
('Zona Sul', -23.280000, -45.920000, 6.5, SYSTIMESTAMP);

INSERT INTO region (reg_name, reg_center_latitude, reg_center_longitude, reg_radius_km, reg_created_at) VALUES 
('Zona Leste', -23.210000, -45.830000, 7.0, SYSTIMESTAMP);

INSERT INTO region (reg_name, reg_center_latitude, reg_center_longitude, reg_radius_km, reg_created_at) VALUES 
('Zona Oeste', -23.230000, -45.970000, 6.0, SYSTIMESTAMP);

INSERT INTO region (reg_name, reg_center_latitude, reg_center_longitude, reg_radius_km, reg_created_at) VALUES 
('Zona Sudeste', -23.250000, -45.860000, 5.5, SYSTIMESTAMP);

CREATE TABLE road (
  roa_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  roa_address VARCHAR2(200) NOT NULL,
  roa_speed_limit NUMBER(5,2) NOT NULL,
  roa_created_at TIMESTAMP DEFAULT SYSTIMESTAMP,
  roa_updated_at TIMESTAMP
);

CREATE TABLE criterion (
  cri_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  cri_name VARCHAR2(100) NOT NULL,
  cri_description VARCHAR2(255) NOT NULL,
  cri_example VARCHAR2(255) NOT NULL,
  cri_math_expression VARCHAR2(255) NOT NULL,
  cri_created_at TIMESTAMP DEFAULT SYSTIMESTAMP,
  cri_created_by NUMBER REFERENCES person(per_id)
);
CREATE UNIQUE INDEX ux_cri_name ON criterion (cri_name);

-- Insert the 4 advanced criteria used for traffic analysis
INSERT INTO criterion (cri_name, cri_description, cri_example, cri_math_expression, cri_created_at) VALUES
('Congestionamento', 'Medição de congestionamento baseado na velocidade relativa dos veículos', 'Velocidade média < 60% da velocidade limite', 'avg(vehicle_speed) / speed_limit < 0.6', SYSTIMESTAMP);

INSERT INTO criterion (cri_name, cri_description, cri_example, cri_math_expression, cri_created_at) VALUES
('Densidade relativa de veículos por câmera', 'Densidade de veículos em relação ao espaço disponível na via', 'Ocupação > 70% do espaço disponível', 'vehicle_space_occupied / available_space > 0.7', SYSTIMESTAMP);

INSERT INTO criterion (cri_name, cri_description, cri_example, cri_math_expression, cri_created_at) VALUES
('Circulação de veículos de grande porte', 'Percentual de veículos de grande porte (caminhões, vans, ônibus) na via', 'Veículos grandes > 30% do tráfego', 'count(large_vehicles) / count(all_vehicles) > 0.3', SYSTIMESTAMP);

INSERT INTO criterion (cri_name, cri_description, cri_example, cri_math_expression, cri_created_at) VALUES
('Infrações por excesso de velocidade', 'Percentual de veículos que excedem o limite de velocidade', 'Infrações > 20% dos veículos', 'count(vehicles WHERE speed > speed_limit) / count(all_vehicles) > 0.2', SYSTIMESTAMP);

CREATE TABLE protocol (
  pro_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  pro_name VARCHAR2(100) NOT NULL,
  pro_created_at TIMESTAMP DEFAULT SYSTIMESTAMP,
  pro_description VARCHAR2(255),
  pro_created_by NUMBER REFERENCES person(per_id)
);
CREATE UNIQUE INDEX ux_pro_name ON protocol (pro_name);

CREATE TABLE camera (
  cam_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  cam_latitude NUMBER(9,6) NOT NULL,
  cam_longitude NUMBER(9,6) NOT NULL,
  cam_active NUMBER(1) DEFAULT 1 NOT NULL CHECK (cam_active IN (0, 1)),
  cam_created_at TIMESTAMP DEFAULT SYSTIMESTAMP,
  cam_updated_at TIMESTAMP,
  roa_id NUMBER NOT NULL REFERENCES road(roa_id),
  reg_id NUMBER NOT NULL REFERENCES region(reg_id)
);
CREATE INDEX ix_camera_roa_id ON camera(roa_id);
CREATE INDEX ix_camera_reg_id ON camera(reg_id);

CREATE TABLE criterion_level (
  cl_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  cl_level NUMBER(5) NOT NULL,
  cl_created_at TIMESTAMP DEFAULT SYSTIMESTAMP,
  cl_created_by NUMBER REFERENCES person(per_id),
  cri_id NUMBER NOT NULL REFERENCES criterion(cri_id),
  CONSTRAINT chk_cl_level_range CHECK (cl_level BETWEEN 1 AND 5)
);
CREATE INDEX ix_criterion_level_cri_id ON criterion_level(cri_id);

CREATE TABLE root_cause (
    rc_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    rc_name VARCHAR2(255),
    rc_description VARCHAR2(255),
    rc_created_at TIMESTAMP DEFAULT SYSTIMESTAMP,
    rc_created_by NUMBER REFERENCES person(per_id)
    
);


CREATE TABLE alert (
  ale_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  ale_level NUMBER(5),
  ale_message VARCHAR2(255),
  ale_conclusion VARCHAR2(255),
  ale_source_type VARCHAR2(30),
  ale_created_at TIMESTAMP DEFAULT SYSTIMESTAMP,
  ale_closed_at TIMESTAMP,
  ale_created_by NUMBER REFERENCES person(per_id),
  ale_assigned_to NUMBER REFERENCES person(per_id),
  cam_id NUMBER REFERENCES camera(cam_id),
  cri_id NUMBER NOT NULL REFERENCES criterion(cri_id),
  rc_id NUMBER NOT NULL REFERENCES root_cause(rc_id),
  pro_id NUMBER REFERENCES protocol(pro_id),
  reg_id NUMBER NOT NULL REFERENCES region(reg_id)
);
CREATE INDEX ix_alert_created_by ON alert(ale_created_by);
CREATE INDEX ix_ale_assigned_to ON alert(ale_assigned_to);
CREATE INDEX ix_alert_cam_id ON alert(cam_id);
CREATE INDEX ix_alert_cri_id ON alert(cri_id);
CREATE INDEX ix_alert_rc_id ON alert(rc_id);
CREATE INDEX ix_alert_pro_id ON alert(pro_id);
CREATE INDEX ix_alert_reg_id ON alert(reg_id);

CREATE TABLE reading (
  rea_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  rea_created_at TIMESTAMP NOT NULL,
  rea_vehicle_type VARCHAR2(30),
  rea_speed NUMBER(5,2),
  rea_plate VARCHAR2(10),
  cam_id NUMBER NOT NULL REFERENCES camera(cam_id)
);
CREATE INDEX ix_reading_camera_id ON reading(cam_id);

CREATE TABLE detected_incident (
  di_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  di_incident_type VARCHAR2(80),
  di_created_at TIMESTAMP DEFAULT SYSTIMESTAMP,
  di_created_by NUMBER REFERENCES person(per_id),
  ale_id NUMBER NOT NULL REFERENCES alert(ale_id)
);
CREATE INDEX ix_incident_ale_id ON detected_incident(ale_id);
CREATE INDEX ix_incident_per_id ON detected_incident(di_created_by);

CREATE TABLE alert_log (
  al_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  al_created_at TIMESTAMP,
  al_previous_level NUMBER(5),
  al_new_level NUMBER(5),
  al_closed_at TIMESTAMP,
  ale_id NUMBER NOT NULL REFERENCES alert(ale_id),
  reg_id NUMBER NOT NULL REFERENCES region(reg_id),
  cri_id NUMBER NOT NULL REFERENCES criterion(cri_id)
);

CREATE INDEX ix_alert_log_ale_id ON alert_log(ale_id);
CREATE INDEX ix_alert_log_reg_id ON alert_log(reg_id);
CREATE INDEX ix_alert_log_cri_id ON alert_log(cri_id);

-- Nota: A tabela dados_base_radares já existe no banco de dados
-- Estrutura esperada:
-- ID                       NOT NULL NUMBER        
-- CAMERA_LAT               NOT NULL NUMBER(10,6)  
-- CAMERA_LONG              NOT NULL NUMBER(10,6)  
-- CAMERA_ID                NOT NULL VARCHAR2(50)  
-- FAIXA_DA_CAMERA          NOT NULL NUMBER(2)     
-- QUANTIDADE_DE_FAIXAS     NOT NULL NUMBER(2)     
-- DATA_HORA                NOT NULL TIMESTAMP(6)  
-- TIPO_VEICULO             NOT NULL VARCHAR2(20)  
-- VELOCIDADE_VEICULO       NOT NULL NUMBER(5,2)   
-- VELOCIDADE_REGULAMENTADA NOT NULL NUMBER(3)     
-- ENDERECO                 NOT NULL VARCHAR2(200) 
-- NUMERO                            VARCHAR2(10)  
-- CIDADE                            VARCHAR2(100) 
-- SENTIDO                           VARCHAR2(50)  

-- Adicionar coluna de controle de processamento (se não existir)
-- ALTER TABLE dados_base_radares ADD PROCESSADO NUMBER(1) DEFAULT 0 NOT NULL CHECK (PROCESSADO IN (0, 1));

-- Índices adicionais para melhor performance (se não existirem)
-- CREATE INDEX ix_dados_base_radares_camera_id ON dados_base_radares(CAMERA_ID);
-- CREATE INDEX ix_dados_base_radares_cidade ON dados_base_radares(CIDADE);
-- CREATE INDEX ix_dados_base_radares_data_hora ON dados_base_radares(DATA_HORA);
-- CREATE INDEX ix_dados_base_radares_tipo_veiculo ON dados_base_radares(TIPO_VEICULO);
-- CREATE INDEX ix_dados_base_radares_processado ON dados_base_radares(PROCESSADO);
