CREATE TABLE PERSON (
  per_id     NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  per_name        VARCHAR2(100) NOT NULL,
  per_whatsapp    VARCHAR2(20),
  per_email       VARCHAR2(100),
  per_password    VARCHAR2(255),
  per_role        VARCHAR2(20),
  per_created_at  TIMESTAMP DEFAULT SYSTIMESTAMP
);
CREATE UNIQUE INDEX ux_user_email ON person (per_email);

CREATE TABLE road (
  roa_id     NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  roa_address     VARCHAR2(200) NOT NULL,
  roa_speed_limit  NUMBER(5,2) NOT NULL,
  roa_created_at  TIMESTAMP DEFAULT SYSTIMESTAMP,
  roa_updated_at  TIMESTAMP
);

CREATE TABLE criterion (
  cri_id  NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  cri_name          VARCHAR2(100) NOT NULL,
  cri_created_at    TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
  cri_created_by    NUMBER REFERENCES person(user_id)
);
CREATE UNIQUE INDEX ux_criterion_name ON criterion (cri_name);

CREATE TABLE protocol (
  pro_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  pro_name VARCHAR2(100) NOT NULL,
  pro_created_at TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
  pro_created_by NUMBER REFERENCES person(user_id)
);
CREATE UNIQUE INDEX ux_protocol_name ON protocol (pro_name);

CREATE TABLE camera (
  camera_id   NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  road_id     NUMBER NOT NULL REFERENCES road(road_id),
  latitude    NUMBER(9,6) NOT NULL,
  longitude   NUMBER(9,6) NOT NULL,
  active      NUMBER(1) DEFAULT 1 NOT NULL CHECK (active IN (0, 1)),
  created_at  TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
  updated_at  TIMESTAMP WITH TIME ZONE
);
CREATE INDEX ix_camera_road_id ON camera(road_id);

CREATE TABLE criterion_level (
  criterion_level_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  criterion_id       NUMBER NOT NULL REFERENCES criterion(criterion_id),
  cl_level           NUMBER(5) NOT NULL,
  created_at         TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
  created_by         NUMBER REFERENCES person(user_id)
);
CREATE INDEX ix_criterion_level_criterion_id ON criterion_level(criterion_id);

CREATE TABLE alert (
  alert_id    NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  criterion_id NUMBER NOT NULL REFERENCES criterion(criterion_id),
  ale_level       NUMBER(5),
  ale_status      VARCHAR2(20),
  assigned_to NUMBER REFERENCES person(user_id),
  message     VARCHAR2(255),
  conclusion  VARCHAR2(255),
  camera_id   NUMBER REFERENCES camera(camera_id),
  created_at  TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
  source_type VARCHAR2(30)
);
CREATE INDEX ix_alert_criterion_id  ON alert(criterion_id);
CREATE INDEX ix_alert_camera_id     ON alert(camera_id);
CREATE INDEX ix_alert_assigned_to   ON alert(assigned_to);

CREATE TABLE reading (
  reading_id    NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  camera_id     NUMBER NOT NULL REFERENCES camera(camera_id),
  created_at   TIMESTAMP WITH TIME ZONE NOT NULL,
  vehicle_type  VARCHAR2(30),
  speed         NUMBER(5,2),
  plate         VARCHAR2(10)
);
CREATE INDEX ix_reading_camera_id ON reading(camera_id);

CREATE TABLE detected_incident (
  incident_id   NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  alert_id      NUMBER NOT NULL REFERENCES alert(alert_id),
  user_id       NUMBER REFERENCES person(user_id),
  incident_type VARCHAR2(80),
  created_at    TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP
);
CREATE INDEX ix_incident_alert_id   ON detected_incident(alert_id);
CREATE INDEX ix_incident_user_id    ON detected_incident(user_id);

CREATE TABLE alert_log (
  log_id      NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  alert_id    NUMBER NOT NULL REFERENCES alert(alert_id),
  user_id     NUMBER REFERENCES person(user_id),
  channel     VARCHAR2(20),
  event       VARCHAR2(100),
  event_ts    TIMESTAMP WITH TIME ZONE,
  al_status      VARCHAR2(20)
);
CREATE INDEX ix_alert_log_alert_id ON alert_log(alert_id);
CREATE INDEX ix_alert_log_user_id  ON alert_log(user_id);
