-- person table (note as "person" is a reserved word; we quote it)
CREATE TABLE "person" (
  user_id     INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name        VARCHAR(100) NOT NULL,
  whatsapp    VARCHAR(20),
  email       VARCHAR(100),
  password    VARCHAR(255),
  role        VARCHAR(20),
  created_at  TIMESTAMPTZ DEFAULT now()
);
CREATE UNIQUE INDEX IF NOT EXISTS ux_user_email ON "person" (email);

CREATE TABLE road (
  road_id     INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  address     VARCHAR(200) NOT NULL,
  road_speed  NUMERIC(5,2) NOT NULL,
  created_at  TIMESTAMPTZ DEFAULT now(),
  updated_at  TIMESTAMPTZ
);

CREATE TABLE criterion (
  criterion_id  INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name          VARCHAR(100) NOT NULL,
  created_at    TIMESTAMPTZ DEFAULT now(),
  created_by    INTEGER REFERENCES "person"(user_id)
);
CREATE UNIQUE INDEX IF NOT EXISTS ux_criterion_name ON criterion (name);

CREATE TABLE protocol (
  protocol_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name        VARCHAR(100) NOT NULL,
  created_at  TIMESTAMPTZ DEFAULT now(),
  created_by  INTEGER REFERENCES "person"(user_id)
);
CREATE UNIQUE INDEX IF NOT EXISTS ux_protocol_name ON protocol (name);

CREATE TABLE camera (
  camera_id   INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  road_id     INTEGER NOT NULL REFERENCES road(road_id),
  latitude    NUMERIC(9,6) NOT NULL,
  longitude   NUMERIC(9,6) NOT NULL,
  active      BOOLEAN NOT NULL DEFAULT TRUE,
  created_at  TIMESTAMPTZ DEFAULT now(),
  updated_at  TIMESTAMPTZ
);
CREATE INDEX IF NOT EXISTS ix_camera_road_id ON camera(road_id);

CREATE TABLE criterion_level (
  criterion_level_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  criterion_id       INTEGER NOT NULL REFERENCES criterion(criterion_id),
  level              SMALLINT NOT NULL,
  created_at         TIMESTAMPTZ DEFAULT now(),
  created_by         INTEGER REFERENCES "person"(user_id)
);
CREATE INDEX IF NOT EXISTS ix_criterion_level_criterion_id ON criterion_level(criterion_id);

CREATE TABLE alert (
  alert_id      INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  criterion_id  INTEGER NOT NULL REFERENCES criterion(criterion_id),
  protocol_id   INTEGER REFERENCES protocol(protocol_id),
  level         SMALLINT,
  status        VARCHAR(20),
  assigned_to   INTEGER REFERENCES "person"(user_id),
  message       VARCHAR(255),
  conclusion    VARCHAR(255),
  camera_id     INTEGER REFERENCES camera(camera_id),
  created_at    TIMESTAMPTZ DEFAULT now(),
  source_type   VARCHAR(30)
);
CREATE INDEX IF NOT EXISTS ix_alert_criterion_id  ON alert(criterion_id);
CREATE INDEX IF NOT EXISTS ix_alert_protocol_id   ON alert(protocol_id);
CREATE INDEX IF NOT EXISTS ix_alert_camera_id     ON alert(camera_id);
CREATE INDEX IF NOT EXISTS ix_alert_assigned_to   ON alert(assigned_to);

CREATE TABLE reading (
  reading_id    INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  camera_id     INTEGER NOT NULL REFERENCES camera(camera_id),
  timestamp     TIMESTAMPTZ NOT NULL,
  vehicle_type  VARCHAR(30),
  speed         NUMERIC(5,2),
  plate         VARCHAR(10)
);
CREATE INDEX IF NOT EXISTS ix_reading_camera_id ON reading(camera_id);

CREATE TABLE detected_incident (
  incident_id   INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  alert_id      INTEGER NOT NULL REFERENCES alert(alert_id),
  user_id       INTEGER REFERENCES "person"(user_id),
  incident_type VARCHAR(80),
  created_at    TIMESTAMPTZ DEFAULT now()
);
CREATE INDEX IF NOT EXISTS ix_incident_alert_id  ON detected_incident(alert_id);
CREATE INDEX IF NOT EXISTS ix_incident_user_id   ON detected_incident(user_id);

CREATE TABLE alert_log (
  log_id        INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  alert_id      INTEGER NOT NULL REFERENCES alert(alert_id),
  user_id       INTEGER REFERENCES "person"(user_id),
  channel       VARCHAR(20),
  event         VARCHAR(100),
  event_ts      TIMESTAMPTZ,
  status        VARCHAR(20)
);
CREATE INDEX IF NOT EXISTS ix_alert_log_alert_id ON alert_log(alert_id);
CREATE INDEX IF NOT EXISTS ix_alert_log_user_id  ON alert_log(user_id);
